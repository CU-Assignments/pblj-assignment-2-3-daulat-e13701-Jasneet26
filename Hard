import java.util.*;
import java.util.stream.*;
class Product {
    String name, category;
    double price;

    Product(String name, String category, double price) {
        this.name = name;
        this.category = category;
        this.price = price;
    }
}

public class Main {
    public static void main(String[] args) {
        List<Product> products = Arrays.asList(
            new Product("Laptop", "Electronics", 800),
            new Product("Phone", "Electronics", 500),
            new Product("Shirt", "Clothing", 40),
            new Product("Jeans", "Clothing", 60)
        );

        // Group by category
        Map<String, List<Product>> grouped = products.stream()
                .collect(Collectors.groupingBy(p -> p.category));
        
        // Most expensive product in each category
        Map<String, Optional<Product>> expensive = products.stream()
                .collect(Collectors.groupingBy(p -> p.category, 
                        Collectors.maxBy(Comparator.comparingDouble(p -> p.price))));

        // Average price of all products
        double avgPrice = products.stream()
                .mapToDouble(p -> p.price)
                .average().orElse(0);

        grouped.forEach((cat, list) -> 
            System.out.println(cat + " -> " + list));
        expensive.forEach((cat, prod) -> 
            System.out.println("Most Expensive in " + cat + ": " + prod.get().name));
        System.out.println("Average Price: " + avgPrice);
    }
}
